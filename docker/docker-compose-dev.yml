version: "3.9"

services:
  app:
    restart: on-failure
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ../env_files/.env
    volumes:
      - ../backend:/usr/src/backend
      - dev-static-data:/vol/web
    depends_on:
      - db
      - redis
    deploy:
      resources:
        limits:
          memory: 250M

  celery_worker:
    restart: on-failure
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    env_file:
      - ../env_files/.env
    command: celery --workdir /usr/src/backend --app config worker -l INFO --concurrency=2 --max-memory-per-child=50000
    depends_on:
      - redis
      - db
    volumes:
      - ../backend:/usr/src/backend
    deploy:
      resources:
        limits:
          memory: 250M

#  celery_beat:
#    restart: on-failure
#    build:
#      context: ..
#      dockerfile: ./docker/Dockerfile
#    env_file:
#      - ../env_files/.env
#    command: celery --workdir /usr/src/backend --app config beat -l INFO
#    depends_on:
#      - redis
#      - db
#    volumes:
#      - ../backend:/usr/src/backend

  db:
    image: postgres:16-alpine
    env_file:
      - ../env_files/.env
    volumes:
      - dev-db-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - dev-redis-data:/data

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - dev-static-data:/vol/web/
      - ../nginx/dev:/etc/nginx/conf.d:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - app

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  dev-db-data:
  dev-static-data:
  dev-redis-data:
